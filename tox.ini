[tox]
envlist = {py27,py36,py37,py38},type-check

[testenv]
whitelist_externals = poetry
                      bash

# Skip package installation - we will run `poetry install` as the first "test" command.
# This is more consistent with everyday use.
skip_install = true
skipsdist = true

# Don't spoil our nice virtualenvs with system packages
sitepackages = False

# Pass necessary env vars to let CI and coverage gathering play together nicely
passenv = CI TRAVIS TRAVIS_* CODECOV_TOKEN

# setenv =
#  MYPYPATH = {toxinidir}/src

# Capture coverage per Python version
setenv = COVERAGE_FILE={envdir}/.coverage

commands_pre = poetry install -v

commands =
  pytest -v -ra \
         --flake8 \
         --pylint \
         -k 'not test_' \
         gluetool
  pytest -v -ra \
         --cov=gluetool \
         --cov-report=html:{envdir}/coverage-report \
         gluetool/tests

[testenv:type-check]
envdir = {toxinidir}/.tox/type-check
basepython = python3.6
skip_install = True
setenv =
  MYPYPATH = {toxinidir}

# Adding `--no-warn-unused-ignores` - `HTTPConnection.debuglevel` is not publicly available in Python 3,
# but mypy does not let us use conditional ignore, therefore it complains about the ignore when being
# checked in `--py2` mode (because in Python 2, the attribute does exist & the ignore is pointless).
# I don't see a way out of it :/
commands =
  mypy --config-file {toxinidir}/mypy.ini \
       --py2 \
       --strict \
       --no-warn-unused-ignores \
       {toxinidir}/gluetool/
  mypy --config-file {toxinidir}/mypy.ini \
       --strict \
       --no-warn-unused-ignores \
       {toxinidir}/gluetool/

# [testenv:py27-doctest]
# whitelist_externals = ansible-playbook
# commands = /usr/bin/ansible-playbook generate-docs.yml -e generate_dir="{envtmpdir}/docs"

# [testenv:py27-static-analysis-coala]
# whitelist_externals = docker
# commands = docker run -ti --rm -v {toxinidir}:/gluetool:z --workdir=/gluetool coala/base coala -c /gluetool/.coafile --non-interactive
